rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.email.matches(".*4nepathrift.*");
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;  // Anyone can read products
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.sellerId == request.auth.uid ||
        isAdmin()
      );
      allow delete: if isAuthenticated() && (
        resource.data.sellerId == request.auth.uid ||
        isAdmin()
      );
    }

    // Sellers collection
    match /sellers/{sellerId} {
      allow read: if true;  // Anyone can read seller info
      allow create: if isAuthenticated() && 
        sellerId == request.auth.uid;
      allow update: if isAuthenticated() && 
        sellerId == request.auth.uid;
    }

    // Orders collection
    match /orders/{orderId} {
      allow create: if isAuthenticated() && 
        request.resource.data.buyerId == request.auth.uid;
      
      allow read: if isAuthenticated() && (
        resource.data.buyerId == request.auth.uid || 
        resource.data.sellerId == request.auth.uid
      );
      
      allow update: if isAuthenticated() && (
        resource.data.buyerId == request.auth.uid || 
        resource.data.sellerId == request.auth.uid
      );
      
      allow delete: if isAuthenticated() && isAdmin();
    }
    
        // Messages collection
    match /messages/{messageId} {
      allow read, write: if isAuthenticated();
    }
    
    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
    }

    // Seller reviews
    match /sellers/{sellerId}/reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Product comments
    match /products/{productId}/comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /screenshots/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    match /{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if true;
    }
  }
} 